acumulador <- acumulador + 1
}
return(df_meses)
}
funcion_meses(12)
setwd("C:/Users/Andy/Desktop/tarea_inpc")#Portos
library(shiny)
library(dplyr)
library(lubridate)
library(stringr)
library(zoo)
library(ggplot2)
inpc <- read.csv("inpc.csv", header = T, sep = ",", skip = 4)
inpc <- na.omit(inpc)
inpc2 <- inpc %>% select(2)
colnames(inpc2) <- "indice"
inpc_ts <- ts(inpc2, start = c(1970, 1), frequency = 12)
inpc_df <- as.data.frame(inpc_ts)
inpc.arima <- arima(inpc_ts, order = c(2,2,2))
inpc.forecast <- predict(inpc.arima, 12)
prediction <- inpc.forecast$pred
plot.ts(inpc.forecast)
plot(inpc.arima)
funcion_andres <- function(meses){
fechas <- as.data.frame(c("2023/02","2023/03", "2023/04", "2023/05", "2023/06", "2023/07","2023/08","2023/09","2023/10","2023/11","2023/12","2024/01"))
colnames(fechas) = "fecha"
prediccion <- as.data.frame(prediction)
tabla_final <- merge(fechas,prediccion, by.x=0, by.y = 0)
tabla_final$Row.names <- NULL
tabla_final$x <- round(tabla_final$x, digits = 2)
ggplot(tabla_final, aes(fecha, x, group = 1, label = x))+
geom_point()+
geom_line()+
geom_text(size = 3, aes(vjust = 2, hjust = 0))
}
funcion_andres()
prediccion <- as.data.frame(prediction)
View(prediccion)
View(prediccion)
funcion_predicciones <- function(meses){
prediccion <- predict(inpc.arima, meses)
prediccion <- as.data.frame(prediction)
}
funcion_predicciones <- function(meses){
prediccion <- predict(inpc.arima, meses)
prediccion <- as.data.frame(prediction)
}
funcion_predicciones <- function(meses){
prediccion <- predict(inpc.arima, meses)
prediccion <- as.data.frame(prediccion)
return(prediccion)
}
funcion_predicciones(32)
prediccion <- as.data.frame(prediccion$pred)
funcion_predicciones <- function(meses){
prediccion <- predict(inpc.arima, meses)
prediccion <- as.data.frame(prediccion$pred)
return(prediccion)
}
funcion_predicciones(32)
View(prediccion)
funcion_predicciones <- function(meses){
prediccion <- predict(inpc.arima, meses)
prediccion <- as.data.frame(prediccion$pred)
return(prediccion)
df_final <- left_join(df_meses, df_)
}
funcion_predicciones(32)
funcion_predicciones <- function(meses){
prediccion <- predict(inpc.arima, meses)
prediccion <- as.data.frame(prediccion$pred)
return(prediccion)
df_final <- left_join(df_meses, prediccion)
}
funcion_meses(6)
funcion_final <- function(meses){
funcion_meses(meses)
funcion_predicciones(meses)
df_final <- left_join(df_meses, prediccion)
return(df_final)
}
funcion_final(6)
funcion_final <- function(meses){
funcion_meses(meses)
funcion_predicciones(meses)
df_final <- full_join(df_meses, prediccion)
return(df_final)
}
funcion_final(6)
help("cbind")
funcion_final <- function(meses){
funcion_meses(meses)
funcion_predicciones(meses)
df_final <- cbind(df_meses, prediccion)
return(df_final)
}
help("cbind")
funcion_final(6)
funcion_final <- function(meses){
funcion_meses(meses)
funcion_predicciones(meses)
df_final <- rbind(df_meses, prediccion)
return(df_final)
}
funcion_final(6)
funcion_final <- function(meses){
funcion_meses(meses)
funcion_predicciones(meses)
df_final <- cbind(df_meses, prediccion)
return(df_final)
}
funcion_final(6)
funcion_final <- function(meses){
df_meses <- funcion_meses(meses)
df_prediccion <- funcion_predicciones(meses)
df_final <- cbind(df_meses, df_prediccion)
return(df_final)
}
funcion_final(6)
df_final <- funcion_final(meses)
df_final <- cbind(df_meses, df_prediccion)
funcion_final <- function(meses){
df_meses <- funcion_meses(meses)
df_prediccion <- funcion_predicciones(meses)
df_final <- cbind(df_meses, df_prediccion)
return(df_final)
}
prediccion <- predict(inpc.arima, meses)
prediccion <- as.data.frame(prediccion$pred)
df_meses <- data.frame(row.names = "fecha")
acumulador <- 1
for (m in 1:meses) {
df_auxiliar <- data.frame(row.names = "fecha")
df_auxiliar$fecha <- 202301 + acumulador
df_meses <- rbind(df_meses, df_auxiliar)
acumulador <- acumulador + 1
}
return(df_meses)
prediccion <- predict(inpc.arima, meses)
prediccion <- as.data.frame(prediccion$pred)
funcion_final(6)
help("colnames")
funcion_plot <- function(meses){
df_final <- funcion_final(meses)
colnames(df_final$x) <- "inpc"
ggplot(df_final, aes(fecha, inpc, group = 1, label = x))+
geom_point()+
geom_line()+
geom_text(size = 3, aes(vjust = 2, hjust = 0))
}
funcion_plot(6)
funcion_plot <- function(meses){
df_final <- funcion_final(meses)
ggplot(df_final, aes(fecha, inpc, group = 1, label = x))+
geom_point()+
geom_line()+
geom_text(size = 3, aes(vjust = 2, hjust = 0))
}
funcion_plot(6)
funcion_plot <- function(meses){
df_final <- funcion_final(meses)
ggplot(df_final, aes(fecha, x, group = 1, label = x))+
geom_point()+
geom_line()+
geom_text(size = 3, aes(vjust = 2, hjust = 0))
}
funcion_plot(6)
funcion_final <- function(meses){
df_meses <- funcion_meses(meses)
df_prediccion <- funcion_predicciones(meses)
df_final <- cbind(df_meses, df_prediccion)
df_final$x <- round(df_dinal$x,2)
return(df_final)
}
funcion_plot <- function(meses){
df_final <- funcion_final(meses)
ggplot(df_final, aes(fecha, x, group = 1, label = x))+
geom_point()+
geom_line()+
geom_text(size = 3, aes(vjust = 2, hjust = 0))
}
funcion_plot(6)
funcion_plot(6)
help("round")
funcion_final <- function(meses){
df_meses <- funcion_meses(meses)
df_prediccion <- funcion_predicciones(meses)
df_final <- cbind(df_meses, df_prediccion)
df_final$x <- round(df_dinal$x,2)
return(df_final)
}
funcion_plot <- function(meses){
df_final <- funcion_final(meses)
ggplot(df_final, aes(fecha, x, group = 1, label = x))+
geom_point()+
geom_line()+
geom_text(size = 3, aes(vjust = 2, hjust = 0))
}
funcion_plot(6)
funcion_final <- function(meses){
df_meses <- funcion_meses(meses)
df_prediccion <- funcion_predicciones(meses)
df_final <- cbind(df_meses, df_prediccion)
return(df_final)
}
funcion_final(6)
funcion_final <- function(meses){
df_meses <- funcion_meses(meses)
df_prediccion <- funcion_predicciones(meses)
df_final <- cbind(df_meses, df_prediccion)
return(df_final)
}
funcion_plot <- function(meses){
df_final <- funcion_final(meses)
ggplot(df_final, aes(fecha, x, group = 1, label = x))+
geom_point()+
geom_line()+
geom_text(size = 3, aes(vjust = 2, hjust = 0))
}
funcion_plot <- function(meses){
df_final <- funcion_final(meses)
df_final$x <- round(df_final$x, 2)
ggplot(df_final, aes(fecha, x, group = 1, label = x))+
geom_point()+
geom_line()+
geom_text(size = 3, aes(vjust = 2, hjust = 0))
}
funcion_plot(6)
funcion_plot(115)
library(shiny); runApp('inpc.r')
runApp('inpc.r')
runApp('inpc.r')
runApp('inpc.r')
runApp('inpc.r')
runApp('inpc.r')
runApp('inpc.r')
library(shiny)
library(dplyr)
library(lubridate)
library(stringr)
library(zoo)
library(ggplot2)
inpc <- read.csv("inpc.csv", header = T, sep = ",", skip = 4)
inpc <- na.omit(inpc)
inpc2 <- inpc %>% select(2)
colnames(inpc2) <- "indice"
inpc_ts <- ts(inpc2, start = c(1970, 1), frequency = 12)
inpc_df <- as.data.frame(inpc_ts)
inpc.arima <- arima(inpc_ts, order = c(2,2,2))
inpc.forecast <- predict(inpc.arima, 12)
prediction <- inpc.forecast$pred
funcion_meses <- function(meses) {
df_meses <- data.frame(row.names = "fecha")
acumulador <- 1
for (m in 1:meses) {
df_auxiliar <- data.frame(row.names = "fecha")
df_auxiliar$fecha <- 202301 + acumulador
df_meses <- rbind(df_meses, df_auxiliar)
acumulador <- acumulador + 1
}
return(df_meses)
}
funcion_predicciones <- function(meses){
prediccion <- predict(inpc.arima, meses)
prediccion <- as.data.frame(prediccion$pred)
return(prediccion)
}
funcion_final <- function(meses){
df_meses <- funcion_meses(meses)
df_prediccion <- funcion_predicciones(meses)
df_final <- cbind(df_meses, df_prediccion)
return(df_final)
}
funcion_plot <- function(meses){
df_final <- funcion_final(meses)
df_final$x <- round(df_final$x, 2)
ggplot(df_final, aes(fecha, x, group = 1, label = x))+
geom_point()+
geom_line()+
geom_text(size = 3, aes(vjust = 2, hjust = 0))
}
ui <- fluidPage(
sliderInput(inputId = "meses", label = "meses (maximo 12)",
min = 1, max = 12, value =6),
plotOutput(outputId="forecast_plot")
)
server <- function(input, output){
output$forecast_plot <- renderPlot({
funcion_plot(input$meses)
})
}
shinyApp(ui, server)
ui <- fluidPage(
sliderInput(inputId = "meses", label = "meses (maximo 12)",
min = 1, max = 12, value =6),
plotOutput(outputId="forecast_plot")
)
install.packages("memoise")
ui <- fluidPage(
sliderInput(inputId = "meses", label = "meses (maximo 12)",
min = 1, max = 12, value =6),
plotOutput(outputId="forecast_plot")
)
server <- function(input, output){
output$forecast_plot <- renderPlot({
funcion_plot(input$meses)
})
}
shinyApp(ui, server)
runApp('inpc.r')
library(shiny)
library(dplyr)
library(lubridate)
library(stringr)
library(zoo)
library(ggplot2)
inpc <- read.csv("inpc.csv", header = T, sep = ",", skip = 4)
inpc <- na.omit(inpc)
inpc2 <- inpc %>% select(2)
colnames(inpc2) <- "indice"
inpc_ts <- ts(inpc2, start = c(1970, 1), frequency = 12)
inpc_df <- as.data.frame(inpc_ts)
inpc.arima <- arima(inpc_ts, order = c(2,2,2))
inpc.forecast <- predict(inpc.arima, 12)
prediction <- inpc.forecast$pred
funcion_meses <- function(meses) {
df_meses <- data.frame(row.names = "fecha")
acumulador <- 1
for (m in 1:meses) {
df_auxiliar <- data.frame(row.names = "fecha")
df_auxiliar$fecha <- 202301 + acumulador
df_meses <- rbind(df_meses, df_auxiliar)
acumulador <- acumulador + 1
}
return(df_meses)
}
funcion_predicciones <- function(meses){
prediccion <- predict(inpc.arima, meses)
prediccion <- as.data.frame(prediccion$pred)
return(prediccion)
}
funcion_final <- function(meses){
df_meses <- funcion_meses(meses)
df_prediccion <- funcion_predicciones(meses)
df_final <- cbind(df_meses, df_prediccion)
return(df_final)
}
funcion_plot <- function(meses){
df_final <- funcion_final(meses)
df_final$x <- round(df_final$x, 2)
ggplot(df_final, aes(fecha, x, group = 1, label = x))+
geom_point()+
geom_line()+
geom_text(size = 3, aes(vjust = 2, hjust = 0))
}
funcion_fecha <- function(meses){
}
ui <- fluidPage(
sliderInput(inputId = "meses", label = "meses (maximo 12)",
min = 1, max = 12, value =6),
plotOutput(outputId="forecast_plot")
)
server <- function(input, output){
output$forecast_plot <- renderPlot({
funcion_plot(input$meses)
})
}
shinyApp(ui, server)
help("lubridate")
df_meses$fecha <- ym(df_meses$fecha)
df_meses$fecha <- ym(df_meses$fecha)
funcion_meses <- function(meses) {
df_meses <- data.frame(row.names = "fecha")
acumulador <- 1
for (m in 1:meses) {
df_auxiliar <- data.frame(row.names = "fecha")
df_auxiliar$fecha <- 202301 + acumulador
df_meses <- rbind(df_meses, df_auxiliar)
acumulador <- acumulador + 1
df_meses$fecha <- ym(df_meses$fecha)
}
return(df_meses)
}
funcion_meses(6)
funcion_meses <- function(meses) {
df_meses <- data.frame(row.names = "fecha")
acumulador <- 1
for (m in 1:meses) {
df_auxiliar <- data.frame(row.names = "fecha")
df_auxiliar$fecha <- 202301 + acumulador
df_meses <- rbind(df_meses, df_auxiliar)
acumulador <- acumulador + 1
}
return(df_meses)
}
funcion_meses(6)
for (m in 1:meses) {
df_auxiliar <- data.frame(row.names = "fecha")
df_auxiliar$fecha <- 202301 + acumulador
df_meses <- rbind(df_meses, df_auxiliar)
acumulador <- acumulador + 1
df_meses$fecha <- as.Date(as.character(df_meses$fecha), format = "%Y%m")
}
funcion_meses <- function(meses) {
df_meses <- data.frame(row.names = "fecha")
acumulador <- 1
for (m in 1:meses) {
df_auxiliar <- data.frame(row.names = "fecha")
df_auxiliar$fecha <- 202301 + acumulador
df_meses <- rbind(df_meses, df_auxiliar)
acumulador <- acumulador + 1
df_meses$fecha <- as.Date(as.character(df_meses$fecha), format = "%Y%m")
}
return(df_meses)
}
funcion_meses(6)
funcion_meses <- function(meses) {
df_meses <- data.frame(row.names = "fecha")
acumulador <- 1
for (m in 1:meses) {
df_auxiliar <- data.frame(row.names = "fecha")
df_auxiliar$fecha <- 202301 + acumulador
df_meses <- rbind(df_meses, df_auxiliar)
acumulador <- acumulador + 1
df_meses$fecha <- as.Date(as.character(df_meses$fecha), format = "%Y%m")
}
return(df_meses)
}
funcion_meses <- function(meses) {
df_meses <- data.frame(row.names = "fecha")
acumulador <- 1
for (m in 1:meses) {
df_auxiliar <- data.frame(row.names = "fecha")
df_auxiliar$fecha <- 202301 + acumulador
df_meses <- rbind(df_meses, df_auxiliar)
acumulador <- acumulador + 1
}
return(df_meses)
}
funcion_meses(6)
funcion_meses(12)
lubridate::ymd(202301)
lubridate::ymd(20230101)
lubridate::ym(20230101)
lubridate::ymd(20230101)
lubridate::ymd(20230101)
funcion_meses <- function(meses) {
df_meses <- data.frame(row.names = "fecha")
acumulador <- month(1)
for (m in 1:meses) {
df_auxiliar <- data.frame(row.names = "fecha")
df_auxiliar$fecha <- ymd(20230101) + acumulador
df_meses <- rbind(df_meses, df_auxiliar)
acumulador <- acumulador + month(1)
}
return(df_meses)
}
funcion_meses(12)
funcion_meses <- function(meses) {
df_meses <- data.frame(row.names = "fecha")
acumulador <- month(1)
for (m in 1:meses) {
df_auxiliar <- data.frame(row.names = "fecha")
df_auxiliar$fecha <- ymd(20230101) + acumulador
df_meses <- rbind(df_meses, df_auxiliar)
acumulador <- acumulador + month(1)
}
return(df_meses)
}
funcion_meses(12)
funcion_meses <- function(meses) {
df_meses <- data.frame(row.names = "fecha")
acumulador <- months(1)
for (m in 1:meses) {
df_auxiliar <- data.frame(row.names = "fecha")
df_auxiliar$fecha <- ymd(20230101) + acumulador
df_meses <- rbind(df_meses, df_auxiliar)
acumulador <- acumulador + months(1)
}
return(df_meses)
}
funcion_meses(12)
runApp('~/Desktop/tarea_inpc/inpc.r')
library(shiny); runApp('inpc.r')
runApp('inpc.r')
library(shiny)
library(dplyr)
library(lubridate)
library(stringr)
library(zoo)
library(ggplot2)
inpc <- read.csv("inpc.csv", header = T, sep = ",", skip = 4)
inpc <- na.omit(inpc)
inpc2 <- inpc %>% select(2)
colnames(inpc2) <- "indice"
inpc_ts <- ts(inpc2, start = c(1970, 1), frequency = 12)
inpc_df <- as.data.frame(inpc_ts)
View(inpc_df)
View(inpc)
View(inpc)
View(inpc2)
View(inpc)
class(inpc$Periodos)
View(inpc)
help("filter")
inpc_chido <- inpc %>%
filter(inpc, Periodos >= "2022/02"
)
inpc_chido <- inpc %>%
filter(Periodos >= "2022/02")
View(inpc_chido)
View(inpc_chido)
