rm(list = ls())
library(shiny)
library(dplyr)
library(lubridate)
library(stringr)
library(zoo)
inpc <- read.csv("inpc.csv", header = T, sep = ",", skip = 4)
rm(list = ls())
inpc <- read.csv("inpc.csv", header = T, sep = ",", skip = 4)
#inpc <- inpc %>% select(2)
inpc <- na.omit(inpc)
inpc <- inpc %>% select(2)
colnames(inpc) <- "indice"
View(inpc)
inpc <- read.csv("inpc.csv", header = T, sep = ",", skip = 4)
#inpc <- inpc %>% select(2)
inpc <- na.omit(inpc)
inpc <- inpc %>% select(2)
colnames(inpc) <- "indice"
inpc_ts <- as.ts(inpc, start = c(1970, 1), frequency = 12)
inpc_df <- as.data.frame(inpc_ts)
View(inpc_df)
View(inpc)
View(inpc_df)
View(inpc)
View(inpc_df)
View(inpc)
inpc_ts <- as.ts(inpc, start = c(1970, 1), frequency = 12)
inpc_df <- as.data.frame(inpc_ts)
View(inpc_df)
View(inpc)
View(inpc_df)
indice <- inpc_df$indice
fechas <- inpc_df$fecha
inpc.arima <- arima(inpc_ts, order = c(2,2,2))
inpc.forecast <- predict(inpc.arima, 1)
prediction <- inpc.forecast$pred
plot(inpc.forecast)
plot(inpc.arima)
View(inpc.forecast)
View(inpc.arima)
View(inpc.arima)
plot(inpc.forecast)
ui <- fluidPage(
sliderInput(inputId = "meses", label = "meses (m?ximo 6)",
min = 1, max = 6, value =6),
)
server <- function(input, output){
output$meses <- renderText(
input$meses
)
output$plot_ejemplo <- renderPlot(
plot(d$fecha,d$inpc)
)
}
shinyApp(ui, server)
plot(inpc.forecast)
plot(inpc.arima)
View(ui)
View(inpc.forecast)
View(inpc.arima)
View(inpc.arima)
plot(inpc.arima)
View(inpc.forecast)
rm(list = ls())
library(shiny)
library(dplyr)
library(lubridate)
library(stringr)
library(zoo)
inpc <- read.csv("inpc.csv", header = T, sep = ",", skip = 4)
#inpc <- inpc %>% select(2)
inpc <- na.omit(inpc)
inpc <- inpc %>% select(2)
colnames(inpc) <- "indice"
inpc_ts <- as.ts(inpc, start = c(1970, 1), frequency = 12)
inpc_df <- as.data.frame(inpc_ts)
indice <- inpc_df$indice
fechas <- inpc_df$fecha
inpc.arima <- arima(inpc_ts, order = c(2,2,2))
inpc.forecast <- predict(inpc.arima, 1)
prediction <- inpc.forecast$pred
plot(inpc.forecast)
plot(inpc.arima)
ui <- fluidPage(
sliderInput(inputId = "meses", label = "meses (m?ximo 6)",
min = 1, max = 6, value =6),
)
output$meses <- renderText(
input$meses
)
output$plot_ejemplo <- renderPlot(
plot(d$fecha,d$inpc)
)
shinyApp(ui, server)
output$plot_ejemplo <- renderPlot(
plot(d$fecha,d$inpc)
)
output$meses <- renderText(
input$meses
)
plot(inpc.forecast)
View(inpc.forecast)
View(inpc.arima)
View(inpc_df)
View(inpc)
View(inpc_df)
View(inpc)
View(inpc_df)
View(inpc)
View(inpc_df)
View(inpc)
View(inpc_df)
View(inpc)
View(inpc_df)
View(inpc.forecast)
indice <- inpc_df$indice
fechas <- inpc_df$fecha
View(inpc)
View(inpc_df)
View(inpc.arima)
inpc <- read.csv("inpc.csv", header = T, sep = ",", skip = 4)
#inpc <- inpc %>% select(2)
inpc <- na.omit(inpc)
View(inpc)
class(inpc$Periodos)
library(shiny)
library(dplyr)
library(lubridate)
library(stringr)
library(zoo)
library(ggplot2)
# setwd("D:/Progra/Clase5") #Paco
# setwd("C:/Users/Andy/Desktop/tarea_inpc")#Portos
setwd("C:/Users/grzlz/Code/icarus/tarea_inpc")
inpc <- read.csv("inpc.csv", header = T, sep = ",", skip = 4)
inpc <- na.omit(inpc)
inpc2 <- inpc %>% select(2)
colnames(inpc2) <- "indice"
inpc_ts <- ts(inpc2, start = c(1970, 1), frequency = 12)
inpc.arima <- arima(inpc_ts, order = c(2,2,2))
inpc.forecast <- predict(inpc.arima, 6)
prediction <- inpc.forecast$pred
plot.ts(inpc.forecast)
plot(inpc.arima)
inpc.forecast
prediction
prediction[1]
names(inpc)
View(inpc)
View(inpc2)
inpc2 <- inpc %>% select("X583753" = "indice")
inpc2 <- inpc %>% select("X583753" == "indice")
inpc2 <- inpc %>% select(2) %>% ("X583753" == "indice")
inpc2 <- inpc %>% select(2) %>% rename("X583753" == "indice")
inpc2 <- inpc %>% select(2) %>% rename("X583753" = "indice")
inpc2 <- inpc %>% select(2) %>% rename("indice" = "X583753")
inpc2 <- inpc %>% select("indice" = "X583753")
inpc <- read.csv("inpc.csv", header = T, sep = ",", skip = 4)
inpc <- na.omit(inpc)
inpc2 <- inpc %>% select("indice" = "X583753")
View(inpc2)
names(inpc)
names(inpc)[2]
inpc2 <- inpc %>% select("indice" = names(inpc)[2])
View(inpc)
View(inpc)
View(inpc)
View(inpc2)
inpc <- read.csv("inpc.csv", header = T, sep = ",", skip = 4) %>% na.omit()
nrow(inpc)
inpc <- read.csv("inpc.csv", header = T, sep = ",", skip = 4)
nrow(inpc)
inpc_ts <- ts(inpc2, start = c(1970, 1), frequency = 12)
inpc.arima <- arima(inpc_ts, order = c(2,2,2))
inpc_arima
inpc_arima <- arima(inpc_ts, order = c(2,2,2))
inpc_arima
inpc_forecast <- predict(inpc.arima, 6)
inpc_forecast
inpc_forecast <- predict(inpc_arima, 6)
inpc_forecast
prediction <- inpc_forecast$pred
prediction
inpc <- read.csv("inpc.csv", header = T, sep = ",", skip = 4) %>%
na.omit()
names(inpc)
inpc <- read.csv("inpc.csv", header = T, sep = ",", skip = 4) %>%
na.omit() %>%
rename("fecha" = names(inpc)[1], "indice" = names(inpc)[2])
inpc_last_year <- inpc %>%
filter(fecha > "2022/01")
View(inpc_last_year)
inpc_last_year <- inpc %>%
filter(fecha >= "2022/01")
pd <- funcion_predecir(2)
funcion_predecir <- function(meses) {
inpc_forecast <- predict(inpc_arima, meses)
predicciones <- inpc_forecast$pred
return(predicciones)
}
pd <- funcion_predecir(2)
pd
nrow(pd)
for i in pd "hola"
for (i in pd) "hola"
for (i in pd) {"hola"}
for (i in pd) {print("hola")}
typeof(pd)
class(pd)
pd
pd[3]
pd[2]
pd[1]
pd[0]
pd[-1]
class(pd[1])
names(inpc_last_year)
funcion_predecir <- function(meses) {
inpc_forecast <- predict(inpc_arima, meses)
predicciones <- inpc_forecast$pred
for (mes in predicciones) {
# Pegar meses a inpc_last_year
df <- inpc_last_year
df$fecha <- append(df$fecha, "nueva fecha")
df$indice <- append(df$indice, mes)
}
return(df)
}
pd <- funcion_predecir(2)
print(mes)
for(mes in predicciones) {
print(mes)
}
inpc_forecast
for(mes in inpc_forecast$pred) {
print(mes)
}
pd
for (mes in predicciones) {
# Pegar meses a inpc_last_year
df$fecha <- append(df$fecha, "nueva fecha")
df$indice <- append(df$indice, mes)
}
funcion_predecir <- function(meses) {
inpc_forecast <- predict(inpc_arima, meses)
predicciones <- inpc_forecast$pred
df <- inpc_last_year
for (mes in predicciones) {
# Pegar meses a inpc_last_year
df$fecha <- append(df$fecha, "nueva fecha")
df$indice <- append(df$indice, mes)
}
return(df)
}
pd <- funcion_predecir(2)
df
df()
df
df
funcion_predecir <- function(meses) {
inpc_forecast <- predict(inpc_arima, meses)
predicciones <- inpc_forecast$pred
my_df <- inpc_last_year
for (mes in predicciones) {
# Pegar meses a inpc_last_year
my_df$fecha <- append(df$fecha, "nueva fecha")
my_df$indice <- append(df$indice, mes)
}
return(my_df)
}
pd <- funcion_predecir(2)
funcion_predecir <- function(meses) {
inpc_forecast <- predict(inpc_arima, meses)
predicciones <- inpc_forecast$pred
my_df <- inpc_last_year
for (mes in predicciones) {
# Pegar meses a inpc_last_year
my_df$indice <- append(df$indice, mes)
}
return(my_df)
}
pd <- funcion_predecir(2)
df
my_df
my_df <- inpc_last_year
my_df$fecha <- append(my_df$fecha, "2023")
fch <- append(my_df$fecha, "2023")
fch
funcion_predecir <- function(meses) {
inpc_forecast <- predict(inpc_arima, meses)
predicciones <- inpc_forecast$pred
my_df <- inpc_last_year
for (mes in predicciones) {
# Pegar meses a inpc_last_year
fch <- append(df$fecha, "nueva fecha")
idx <- append(df$indice, mes)
}
my_df <- data.frame(x = fch, y = idx)
return(my_df)
}
pd <- funcion_predecir(2)
for(mes in inpc_forecast$pred) {
print(mes)
}
predicciones
inpc_forecast <- predict(inpc_arima, 2)
predicciones <- inpc_forecast$pred
for(mes in predicciones) {
print(mes)
}
funcion_predecir <- function(meses) {
inpc_forecast <- predict(inpc_arima, meses)
predicciones <- inpc_forecast$pred
my_df <- inpc_last_year
for (mes in predicciones) {
# Pegar meses a inpc_last_year
fch <- append(my_df$fecha, "nueva fecha")
idx <- append(my_df$indice, mes)
}
my_df <- data.frame(x = fch, y = idx)
return(my_df)
}
pd <- funcion_predecir(2)
a <- 1
b <- 2
print(a, b)
print(a)
print(n)
print(b)
